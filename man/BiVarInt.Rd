% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/BiVarInt.R
\name{BiVarInt}
\alias{BiVarInt}
\title{BiVarInt}
\usage{
BiVarInt(
  z1,
  z2,
  gap1,
  gap2,
  maxit,
  progress = FALSE,
  sigClip = 0.999,
  delT = 1
)
}
\arguments{
\item{z1}{first time series (possibly) with gaps, denoted by \code{NA}.}

\item{z2}{second time series (possibly) with gaps, denoted by \code{NA}.}

\item{gap1}{indexes of missing values from \code{z2}, from \code{1:N}, where \code{N = length(z2)}.}

\item{gap2}{indexes of missing values from \code{z1}, from \code{1:N}, where \code{N = length(z1)}.}

\item{maxit}{maximum number of iterations for convergence in interpolation.}

\item{progress}{logical: should progress be written to screen as iterations proceed?}

\item{sigClip}{probabilistic significance for choice of line components, dividing series}

\item{delT}{the time step delta-t in seconds.}
}
\value{
zF the final interpolated series.
}
\description{
BiVarInt
}
\details{
This function implements the algorithm developed and explained in Chapter 4 of

Additional details...
          A list of five elements, including an interpolated series:
           zF the final interpolated series.
           p the number of iterations.
           diffC the difference between the final series and the previous iteration (metric for convergence).
           zA a list of interim series, showing each stage of the convergence.
           converge logical indicating whether convergence occurred.
}
\examples{
library("tsinterp")
          data("flux")
          z1 <- flux$SagOrig
          z1[which(flux$S == FALSE)] <- NA
          z2 <- flux$PentOrig
          # Unfortunately, not fast enough to run for CRAN checks
          sagInt <- BiVarInt(z1 = z1, z2 = z2, gap1 = which(flux$S == FALSE), 
                             gap2 = NULL, maxit = 3, delT = 86400)
}
