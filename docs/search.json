[{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Wesley Burr. Maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Burr W, LINPACK wcf, Adenuga , Niksefat R, Hawthorne R, Criscuolo T (2023). tsinterp: Time Series Interpolation. R package version 0.3-0.","code":"@Manual{,   title = {tsinterp: Time Series Interpolation},   author = {Wesley Burr and with contributions from LINPACK and Alex Adenuga and Roxana Niksefat and Robyn Hawthorne and T. Criscuolo},   year = {2023},   note = {R package version 0.3-0}, }"},{"path":"/index.html","id":"tsinterp","dir":"","previous_headings":"","what":"Time Series Interpolation","title":"Time Series Interpolation","text":"tsinterp: Time Series Interpolation Package R (v.0.2-0). CRAN, passes –-cran checks.","code":""},{"path":"/reference/BiVarInt.html","id":null,"dir":"Reference","previous_headings":"","what":"BiVarInt — BiVarInt","title":"BiVarInt — BiVarInt","text":"BiVarInt","code":""},{"path":"/reference/BiVarInt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BiVarInt — BiVarInt","text":"","code":"BiVarInt(   z1,   z2,   gap1,   gap2,   maxit,   progress = FALSE,   sigClip = 0.999,   delT = 1 )"},{"path":"/reference/BiVarInt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"BiVarInt — BiVarInt","text":"z1 first time series (possibly) gaps, denoted NA. z2 second time series (possibly) gaps, denoted NA. gap1 indexes missing values z2, 1:N, N = length(z2). gap2 indexes missing values z1, 1:N, N = length(z1). maxit maximum number iterations convergence interpolation. progress logical: progress written screen iterations proceed? sigClip probabilistic significance choice line components, dividing series delT time step delta-t seconds.","code":""},{"path":"/reference/BiVarInt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"BiVarInt — BiVarInt","text":"zF final interpolated series.","code":""},{"path":"/reference/BiVarInt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"BiVarInt — BiVarInt","text":"function implements algorithm developed explained Chapter 4 Additional details...           list five elements, including interpolated series:            zF final interpolated series.            p number iterations.            diffC difference final series previous iteration (metric convergence).            zA list interim series, showing stage convergence.            converge logical indicating whether convergence occurred.","code":""},{"path":"/reference/BiVarInt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"BiVarInt — BiVarInt","text":"","code":"library(\"tsinterp\")           data(\"flux\")           z1 <- flux$SagOrig           z1[which(flux$S == FALSE)] <- NA           z2 <- flux$PentOrig           # Unfortunately, not fast enough to run for CRAN checks           sagInt <- BiVarInt(z1 = z1, z2 = z2, gap1 = which(flux$S == FALSE),                               gap2 = NULL, maxit = 3, delT = 86400) #> Iteration 0:  N/A  (R Version:  R version 4.3.1 (2023-06-16 ucrt)  #>  #> snowfall 1.84-6.2 initialized (using snow 0.4-4): parallel execution on 2 CPUs. #> ......) (......)  #> Iteration 1: 0.573121 #> Iteration 2: 0.113388 #> Iteration 3: 0.032551 #>  #> Stopping cluster"},{"path":"/reference/dot-interpolate2.html","id":null,"dir":"Reference","previous_headings":"","what":"interpolate2 — .interpolate2","title":"interpolate2 — .interpolate2","text":"interpolate2","code":""},{"path":"/reference/dot-interpolate2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"interpolate2 — .interpolate2","text":"","code":".interpolate2(zI, gap, blocks, delT, sigClip, freqSave, progress)"},{"path":"/reference/dot-interpolate2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"interpolate2 — .interpolate2","text":"zI  gap  blocks  delT  sigClip  freqSave  progress","code":""},{"path":"/reference/dpssap.html","id":null,"dir":"Reference","previous_headings":"","what":"Discrete Prolate Spheroidal Sequence Associated Polynomials — dpssap","title":"Discrete Prolate Spheroidal Sequence Associated Polynomials — dpssap","text":"Generates associated polynomials set discrete prolate spheroidal sequences (dpss). Used accurate estimation polynomial trends.","code":""},{"path":"/reference/dpssap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Discrete Prolate Spheroidal Sequence Associated Polynomials — dpssap","text":"","code":"dpssap(V, maxdeg)"},{"path":"/reference/dpssap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Discrete Prolate Spheroidal Sequence Associated Polynomials — dpssap","text":"V dpss (Slepian) sequence array, computed dpss. maxdeg maximum degree associated polynomials estimate return.","code":""},{"path":"/reference/dpssap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Discrete Prolate Spheroidal Sequence Associated Polynomials — dpssap","text":"Returns list three elements, second associated polynomials, stored N * (maxdeg + 1).","code":""},{"path":"/reference/dpssap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Discrete Prolate Spheroidal Sequence Associated Polynomials — dpssap","text":"Computes Discrete Prolate Spheroidal Sequences Associated  Polynomials given N given (pre-computed) matrix V  dimension N * K, concentration NW.  Takes parameter maxdeg maximum degree. Based algorithm developed Thomson (2001).","code":""},{"path":"/reference/dpssap.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Discrete Prolate Spheroidal Sequence Associated Polynomials — dpssap","text":"Thomson, D.J (2001) Spectrum estimation harmonic analysis. Proceedings IEEE Volume 70, number 9, pp. 1055--1096. Thomson, D.J. (2001) Inverse Constrained Projection Filters.  Proc. SPIE 4478, Wavelets: Applications Signal Image Processing IX, 172  (December 5, 2001); doi:10.1117/12.449708","code":""},{"path":"/reference/dpssap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Discrete Prolate Spheroidal Sequence Associated Polynomials — dpssap","text":"","code":"library(\"tsinterp\")  # compute associated polynomials for given dpss dw <- multitaper::dpss(n = 100, k = 12, nw = 6)$v dwap <- dpssap(V = dw, maxdeg = 3)"},{"path":"/reference/estimateMt.html","id":null,"dir":"Reference","previous_headings":"","what":"Title estimateMt — estimateMt","title":"Title estimateMt — estimateMt","text":"Title estimateMt","code":""},{"path":"/reference/estimateMt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title estimateMt — estimateMt","text":"","code":"estimateMt(x, N, nw, k, pMax)"},{"path":"/reference/estimateMt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title estimateMt — estimateMt","text":"x data? N parameter fitting quadratic nw parameter fitting quadratic k parameter fitting quadratic pMax parameter fitting quadratic","code":""},{"path":"/reference/estimateMt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title estimateMt — estimateMt","text":"phat","code":""},{"path":"/reference/estimateTt.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the sinusoidal components in a time series. — estimateTt","title":"Estimate the sinusoidal components in a time series. — estimateTt","text":"function estimates sinusoidal components time series using multitaper method.","code":""},{"path":"/reference/estimateTt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the sinusoidal components in a time series. — estimateTt","text":"","code":"estimateTt(x, epsilon, dT, nw, k, sigClip, progress = FALSE, freqIn = NULL)"},{"path":"/reference/estimateTt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the sinusoidal components in a time series. — estimateTt","text":"x input time series. epsilon tolerance peak estimation convergence. dT time interval data points. nw time-half bandwidth parameter multitaper. k number tapers. sigClip Significance level peak detection. progress TRUE, show progress information. freqIn pre-defined set frequencies (optional).","code":""},{"path":"/reference/estimateTt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the sinusoidal components in a time series. — estimateTt","text":"matrix containing sinusoidal components.","code":""},{"path":"/reference/estimateTt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimate the sinusoidal components in a time series. — estimateTt","text":"function follows algorithmic steps: 1. Spectrum/F-test pilot estimate using multitaper method. 2. Estimation significant peaks based significance level (sigClip). 3. Refinement peak locations eliminating duplicates optimizing peak frequencies. 4. Estimation phase amplitude inverting spectrum (line component removal).","code":""},{"path":"/reference/estimateTt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate the sinusoidal components in a time series. — estimateTt","text":"","code":"estimateTt(x, epsilon = 1e-10, dT = 0.01, nw = 4, k = 5, sigClip = 0.05) #> Error in eval(expr, envir, enclos): object 'x' not found"},{"path":"/reference/estimateWt.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility that takes pre-interpolated (linear?) series and computes spectra\r\nand ACVF / CCVF series from them, which are then passed to mwXSwiener. — estimateWt","title":"Utility that takes pre-interpolated (linear?) series and computes spectra\r\nand ACVF / CCVF series from them, which are then passed to mwXSwiener. — estimateWt","text":"Utility takes pre-interpolated (linear?) series computes spectra ACVF / CCVF series , passed mwXSwiener.","code":""},{"path":"/reference/estimateWt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility that takes pre-interpolated (linear?) series and computes spectra\r\nand ACVF / CCVF series from them, which are then passed to mwXSwiener. — estimateWt","text":"","code":"estimateWt(xd1, xd2, ok1, ok2, dT, blocks, neh, maxlag, clipMax)"},{"path":"/reference/estimateWt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility that takes pre-interpolated (linear?) series and computes spectra\r\nand ACVF / CCVF series from them, which are then passed to mwXSwiener. — estimateWt","text":"xd1  xd2  ok1  ok2  dT  blocks  neh  maxlag  clipMax","code":""},{"path":"/reference/findBlocks.html","id":null,"dir":"Reference","previous_headings":"","what":"findBlocks\r\nFind blocks of missing points from a mask of a time series\r\nScans element-wise to find blocks of missing points — findBlocks","title":"findBlocks\r\nFind blocks of missing points from a mask of a time series\r\nScans element-wise to find blocks of missing points — findBlocks","text":"findBlocks Find blocks missing points mask time series Scans element-wise find blocks missing points","code":""},{"path":"/reference/findBlocks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"findBlocks\r\nFind blocks of missing points from a mask of a time series\r\nScans element-wise to find blocks of missing points — findBlocks","text":"","code":"findBlocks(mask)"},{"path":"/reference/findBlocks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"findBlocks\r\nFind blocks of missing points from a mask of a time series\r\nScans element-wise to find blocks of missing points — findBlocks","text":"mask Usage: findBlocks(mask)","code":""},{"path":"/reference/findBlocks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"findBlocks\r\nFind blocks of missing points from a mask of a time series\r\nScans element-wise to find blocks of missing points — findBlocks","text":"matrix missing points blocks, size M * 3. start-point, end-point length block recorded row-wise","code":""},{"path":"/reference/findBlocks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"findBlocks\r\nFind blocks of missing points from a mask of a time series\r\nScans element-wise to find blocks of missing points — findBlocks","text":"","code":"library(\"tsinterp\")            data(\"flux\")           miss <- flux$S            miss[miss == FALSE] <- NA           blocks <- findBlocks(miss)"},{"path":"/reference/findPowers.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Powers — findPowers","title":"Find Powers — findPowers","text":"Find Powers","code":""},{"path":"/reference/findPowers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Powers — findPowers","text":"","code":"findPowers(N, f0, Nyq, prec)"},{"path":"/reference/findPowers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Powers — findPowers","text":"N  f0  Nyq  prec","code":""},{"path":"/reference/gen_m_t.html","id":null,"dir":"Reference","previous_headings":"","what":"gen_m_t is a used to generate mt for the interpolation function — gen_m_t","title":"gen_m_t is a used to generate mt for the interpolation function — gen_m_t","text":"gen_m_t used generate mt interpolation function","code":""},{"path":"/reference/gen_m_t.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"gen_m_t is a used to generate mt for the interpolation function — gen_m_t","text":"","code":"gen_m_t(zI, N, delT, sigClip, progress)"},{"path":"/reference/gen_m_t.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"gen_m_t is a used to generate mt for the interpolation function — gen_m_t","text":"zI Input time series; missing values. N Length zI delT delta-T; time step time series. sigClip Significance level periodic component detection. progress progress tick printed ?","code":""},{"path":"/reference/gen_m_t.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"gen_m_t is a used to generate mt for the interpolation function — gen_m_t","text":"class list Ttp freqsave objects","code":""},{"path":"/reference/gen_m_t.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"gen_m_t is a used to generate mt for the interpolation function — gen_m_t","text":"function , given argument zI, computes MtP/TtP pairing estimates, can used  maximum-likelihood iterative step EM algorithm interpolation.","code":""},{"path":"/reference/interpolate.html","id":null,"dir":"Reference","previous_headings":"","what":"interpolate — interpolate","title":"interpolate — interpolate","text":"Univariate interpolation gappy time series.","code":""},{"path":"/reference/interpolate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"interpolate — interpolate","text":"","code":"interpolate(z, gap, maxit = 20, progress = FALSE, sigClip = 0.999, delT = 1)"},{"path":"/reference/interpolate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"interpolate — interpolate","text":"z time series gaps, denoted NA. gap indexes missing values, 1:N, N = length(z). maxit maximum number iterations convergence interpolation. progress logical: progress written screen iterations proceed? sigClip probabilistic significance choice line components, dividing series ``signal'' ``noise'' (see algorithm ). Suggested kept 0.95 minimum. delT time step delta-t seconds.","code":""},{"path":"/reference/interpolate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"interpolate — interpolate","text":"returns list interpolated timeseries","code":""},{"path":"/reference/interpolate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"interpolate — interpolate","text":"","code":"library(\"tsinterp\")          data(\"flux\")          z1 <- flux$SagOrig          z1[which(flux$S == FALSE)] <- NA          interpolate(z, gap, maxit = 20, progress=FALSE, sigClip=0.999, delT=1) #> Error in eval(expr, envir, enclos): object 'z' not found"},{"path":"/reference/linInt.html","id":null,"dir":"Reference","previous_headings":"","what":"Title linInt — linInt","title":"Title linInt — linInt","text":"Title linInt","code":""},{"path":"/reference/linInt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title linInt — linInt","text":"","code":"linInt(dat, blocks)"},{"path":"/reference/linInt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title linInt — linInt","text":"dat data blocks","code":""},{"path":"/reference/linInt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title linInt — linInt","text":"dat","code":""},{"path":"/reference/removePeriod.html","id":null,"dir":"Reference","previous_headings":"","what":"Removes period from a data for time series interpolation purpose — removePeriod","title":"Removes period from a data for time series interpolation purpose — removePeriod","text":"Removes period data time series interpolation purpose","code":""},{"path":"/reference/removePeriod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Removes period from a data for time series interpolation purpose — removePeriod","text":"","code":"removePeriod(xd, f0, nw, k, deltaT, warn = FALSE, prec = 1e-10, sigClip)"},{"path":"/reference/removePeriod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Removes period from a data for time series interpolation purpose — removePeriod","text":"xd : data f0 : freq periodicity remove nw : parameters multitaper k : parameters multitaper deltaT : parameter xd warn  prec : starting precision finding good nFFT removal sigClip","code":""},{"path":"/reference/removePeriod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Removes period from a data for time series interpolation purpose — removePeriod","text":"inv","code":""},{"path":"/reference/spec.mtm.cross.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute cross-covariance sequence from two spectral objects. — spec.mtm.cross","title":"Compute cross-covariance sequence from two spectral objects. — spec.mtm.cross","text":"function computes cross-covariance sequence two spectral objects. requires spectral objects computed `returnInternals` argument set TRUE. two spectral objects must parameters successful computation. function can also limit maximum lag cross-covariance sequence.","code":""},{"path":"/reference/spec.mtm.cross.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute cross-covariance sequence from two spectral objects. — spec.mtm.cross","text":"","code":"spec.mtm.cross(sp1, sp2, maxlag = NULL)"},{"path":"/reference/spec.mtm.cross.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute cross-covariance sequence from two spectral objects. — spec.mtm.cross","text":"sp1 first spectral object. sp2 second spectral object. maxlag Maximum lag cross-covariance sequence (optional).","code":""},{"path":"/reference/spec.mtm.cross.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute cross-covariance sequence from two spectral objects. — spec.mtm.cross","text":"cross-covariance sequence.","code":""},{"path":"/reference/spec.mtm.cross.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute cross-covariance sequence from two spectral objects. — spec.mtm.cross","text":"function computes cross-covariance sequence utilizing spectral properties two input spectral objects. `maxlag` parameter controls maximum lag cross-covariance sequence. Ensure spectral objects computed `returnInternals` argument set TRUE consistent parameters.","code":""},{"path":"/reference/spec.mtm.cross.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute cross-covariance sequence from two spectral objects. — spec.mtm.cross","text":"","code":"sp1 <- multitaper::spec.mtm(x1, nw = 4, k = 5, returnInternals = TRUE) #> Error in eval(expr, envir, enclos): object 'x1' not found sp2 <- multitaper::spec.mtm(x2, nw = 4, k = 5, returnInternals = TRUE) #> Error in eval(expr, envir, enclos): object 'x2' not found spec.mtm.cross(sp1, sp2) #> Error in eval(expr, envir, enclos): object 'sp1' not found"},{"path":"/reference/SpecToACV.html","id":null,"dir":"Reference","previous_headings":"","what":"SpecToACV — SpecToACV","title":"SpecToACV — SpecToACV","text":"SpecToACV","code":""},{"path":"/reference/SpecToACV.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SpecToACV — SpecToACV","text":"","code":"SpecToACV(spec, maxlag)"},{"path":"/reference/SpecToACV.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SpecToACV — SpecToACV","text":"spec  maxlag","code":""},{"path":"/reference/SpecToACVdual.html","id":null,"dir":"Reference","previous_headings":"","what":"SpecToACVdual — SpecToACVdual","title":"SpecToACVdual — SpecToACVdual","text":"SpecToACVdual","code":""},{"path":"/reference/SpecToACVdual.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SpecToACVdual — SpecToACVdual","text":"","code":"SpecToACVdual(spec, maxlag = NULL)"},{"path":"/reference/SpecToACVdual.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SpecToACVdual — SpecToACVdual","text":"spec  maxlag","code":""},{"path":"/reference/tsinterp.html","id":null,"dir":"Reference","previous_headings":"","what":"tsinterp: A Time Series Interpolation Package — tsinterp","title":"tsinterp: A Time Series Interpolation Package — tsinterp","text":"Contains implementations time series interpolation algorithms developed Wesley Burr part PhD.","code":""},{"path":"/reference/tsinterp.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"tsinterp: A Time Series Interpolation Package — tsinterp","text":"Thomson, D.J (1982) Spectrum estimation harmonic analysis. Proceedings IEEE Volume 70, number 9, pp. 1055--1096. Burr, W.S. (2012) Air Pollution Health: Time Series Tools Analysis. PhD Thesis, Queen's University Kingston, October, 2012. https://qspace.library.queensu.ca/handle/1974/7617","code":""},{"path":"/reference/tsinterp.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"tsinterp: A Time Series Interpolation Package — tsinterp","text":"[aut, cre] Wesley S. Burr `<wesley.burr@gmail.com>`, contributions LINPACK","code":""}]
